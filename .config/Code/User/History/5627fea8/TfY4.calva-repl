; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /home/buddhilw/facti/linfo-ppi/pdfPC ; npx shadow-cljs -d cider/cider-nrepl:0.28.5 watch :app ; popd
; Interrupting Jack-in process.
; Jacking in...
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /home/buddhilw/facti/linfo-ppi/pdfPC ; npx shadow-cljs -d cider/cider-nrepl:0.28.5 watch :app ; popd
; Using host:port localhost:3333 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉>  ; Use `alt+enter` to evaluate
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
; Jack-in done.
cljs꞉cljs.user꞉>  ; Use `alt+enter` to evaluate
#object[app$views$app]
cljs꞉app.core꞉> 
#object[app$views$app]
cljs꞉app.core꞉> 
#object[app$views$app]
cljs꞉app.core꞉> 
#'app.core/montar-view
cljs꞉app.core꞉> 
#'app.core/montar-view
cljs꞉app.core꞉> 
#'app.core/montar-view
cljs꞉app.core꞉> 
#'app.core/montar-view
cljs꞉app.core꞉> 
#'app.core/montar-view
cljs꞉app.core꞉> 
#'app.core/montar-view
cljs꞉app.core꞉> 
#'app.core/montar-view
cljs꞉app.core꞉> 
#'app.core/montar-view
cljs꞉app.core꞉> 
#'app.core/montar-view
cljs꞉app.core꞉> 
; Evaluating file: views.cljs
[]
cljs꞉app.views꞉> 
nil
; ------ REPL Error while processing ---------------------------------------------
; #dbg
; (defn app
;   "Aplicação da geração de PDF"
;   []
;   (fn []
;     [:div.main-wrapper
;      [:div.form-espaco
;       [:div.form-margins
;        [:<>
;         [header "resposáveis - prestação de contas"]
;         [projeto]
;         [coord-identificacao]
;         [drd-identificacao]
;         [rlc-identificacao]
;         [header "Dados Gerais"]
;         [dg-identificacao]
;         [header "Relatório de Gestão"]
;         [rg-identificacao]
;         [header "Relatório de execução física"]
;         [re-fis-identificacao]
;         [header "Relatório de execução financeira"]
;         [re-fin-identificacao]
;         [header "Declaração de guarda e conservação dos documentos contábeis"]
;         [dgcdc-identificacao]
;         [header "Solicitação de doação de bens"]
;         [sdb-identificacao]]]]]))
; failed compiling constant: #'cider.nrepl.middleware.debug/breakpoint-if-interesting; clojure.lang.Var is not a valid ClojureScript constant.
; 
cljs꞉app.views꞉> 
nil
; ------ WARNING - :undeclared-var -----------------------------------------------
;  Resource: <eval>:1:1
;  Use of undeclared Var app.views/resposáveis
; --------------------------------------------------------------------------------
; 
cljs꞉app.views꞉> 
nil
; ------ REPL Error while processing ---------------------------------------------
; #dbg
; (defn app
;   "Aplicação da geração de PDF"
;   []
;   (fn []
;     [:div.main-wrapper
;      [:div.form-espaco
;       [:div.form-margins
;        [:<>
;         [header "resposáveis - prestação de contas"]
;         [projeto]
;         [coord-identificacao]
;         [drd-identificacao]
;         [rlc-identificacao]
;         [header "Dados Gerais"]
;         [dg-identificacao]
;         [header "Relatório de Gestão"]
;         [rg-identificacao]
;         [header "Relatório de execução física"]
;         [re-fis-identificacao]
;         [header "Relatório de execução financeira"]
;         [re-fin-identificacao]
;         [header "Declaração de guarda e conservação dos documentos contábeis"]
;         [dgcdc-identificacao]
;         [header "Solicitação de doação de bens"]
;         [sdb-identificacao]]]]]))
; failed compiling constant: #'cider.nrepl.middleware.debug/breakpoint-if-interesting; clojure.lang.Var is not a valid ClojureScript constant.
; 
cljs꞉app.views꞉> 
#object[app$views$app]
cljs꞉app.core꞉> 
#object[app$views$app]
cljs꞉app.core꞉> 
#object[app$views$app]
cljs꞉app.core꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "undefined" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Aborting jack-in. No project type selected.
; Connecting using "shadow-cljs" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Connecting ...
; Reading port file: file:///home/buddhilw/facti/linfo-ppi/pdfPC/.shadow-cljs/nrepl.port ...
; Using host:port localhost:3333 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉shadow.user꞉> 
; Creating cljs repl session...
; Connecting cljs repl: shadow-cljs...
;   The Calva Connection Log might have more connection progress information.
; Connected session: cljs, repl: :app
; TIPS: You can choose which REPL to use (clj or cljs):
;    *Calva: Toggle REPL connection*
;    (There is a button in the status bar for this)
